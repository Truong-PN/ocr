"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 3.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import time
import logging
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8+fu=l55pq3a0$&vym=$^8_pvaetrcrr46*j_%+@d9w6e!zi78'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_HEADERS = ['*']

CORS_ALLOW_METHODS = ['*']

CORS_ALLOWED_ORIGINS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'api',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'dbocr',            # Database name
        'USER': 'admin',
        'PASSWORD': 'admin',
        'HOST': 'localhost',
        'PORT': '5432'
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
        'rest_framework.permissions.IsAuthenticated',
        # 'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.MultiPartParser',
        'rest_framework.parsers.FileUploadParser',
        'rest_framework.parsers.FormParser',
    ),
    # 'DEFAULT_AUTHENTICATION_CLASSES': (
    #     'rest_framework_simplejwt.authentication.JWTAuthentication',
    #     'rest_framework.authentication.SessionAuthentication',
    #     'rest_framework.authentication.BasicAuthentication',
    # ),
    'EXCEPTION_HANDLER': 'base.utils.custom_exception_handler'
}


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

TEMPLATE_TIME = '%Y/%m/%d'

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static'

IMAGE_URL = '/images/'
IMAGE_ROOT = BASE_DIR / 'images'
IMAGE_PATH = time.strftime(Path(IMAGE_ROOT / TEMPLATE_TIME).__str__())


CORE_ROOT = BASE_DIR / 'core'
OCR_ROOT = BASE_DIR / 'ocr'
MODEL_ROOT = OCR_ROOT / 'models'

LOG_ROOT = BASE_DIR / 'logs'
LOG_PATH = time.strftime(Path(LOG_ROOT / TEMPLATE_TIME).__str__())

Path(LOG_PATH).mkdir(parents=True, exist_ok=True)
logging.basicConfig(
    format=f"[%(asctime)-15s] - [%(levelname)-6s] - [%(filename)s:%(lineno)d] : %(message)s",
    filemode="a",
    filename= (Path(LOG_PATH) / 'appication.log').__str__(),
    level=logging.INFO,
    datefmt="%Y-%m-%d %H:%M:%S",
    force=True
)

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Model
MODEL = {
    'angle_rotate': {
        'filename': 'MobileNetV1_4class_512DS_acc92_angle_classification.h5',
        'filepath': Path(MODEL_ROOT / 'MobileNetV1_4class_512DS_acc92_angle_classification.h5').__str__(),
        'url': 'https://github.com/cstruongpn/storage/raw/main/MobileNetV1_4class_512DS_acc92_angle_classification.zip'
    },
    'vietocr': {
        'filename': 'vgg_seq2seq.pth',
        'filepath': Path(MODEL_ROOT / 'vgg_seq2seq.pth').__str__(),
        'url': 'https://github.com/cstruongpn/storage/raw/main/vgg_seq2seq.zip'
    },
}

ENVIRONMENT = {
    'MODULE_PATH': MODEL_ROOT.__str__(),
    'TF_CPP_MIN_LOG_LEVEL': '3'
}

SYSPATH = [
    OCR_ROOT.__str__()
]

THRESH_AREA = 0.6
THRESH_DUPLICATE = 0.3
WIDTH_ORIGIN = 900
HEIGHT_ORIGIN = 600
